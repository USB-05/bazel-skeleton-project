---
apiVersion: "v1"
kind: "ServiceAccount"
metadata:
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::123123123123:role/nx-bazel-cache-v1"
  name: "nx-bazel-cache-v1"
---
apiVersion: v1
kind: "Service"
metadata:
  name: "bazel-cache"
  annotations:
    nexxiot.com/alert-channel: "slack:team-system"
  labels:
    "app.kubernetes.io/name": "bazel-cache"
    app.kubernetes.io/part-of: "bazel-runner"
spec:
  ports:
    - port: 9092
      name: grpc
      protocol: TCP
    - port: 8080
      name: http
      protocol: TCP
  selector:
    "app.kubernetes.io/name": "bazel-cache"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: bazel-cache
  annotations:
    nexxiot.com/alert-channel: "slack:team-system"
  labels:
    "app.kubernetes.io/name": "bazel-cache"
    app.kubernetes.io/part-of: "bazel-runner"
spec:
  serviceName: bazel-cache
  volumeClaimTemplates:
    - metadata:
        name: bazel-cache
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
  replicas: 3
  selector:
    matchLabels:
      "app.kubernetes.io/name": "bazel-cache"
  template:
    metadata:
      labels:
        "app.kubernetes.io/name": "bazel-cache"
      annotations:
        app.kubernetes.io/part-of: "bazel-runner"
    spec:
      serviceAccountName: "nx-bazel-cache-v1"
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: "bazel-cache"
          maxSkew: 1
          topologyKey: "topology.kubernetes.io/zone"
          whenUnsatisfiable: "DoNotSchedule"
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: "bazel-cache"
          maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
      affinity: # schedule close to runner if possible
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: "bazel-runner"
              weight: 10
            - podAffinityTerm:
                topologyKey: "kubernetes.io/zone"
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: "bazel-runner"
              weight: 10
      initContainers:
        - name: volume-permissions
          image: "busybox:1.36-glibc"
          command: [ "/bin/sh" ]
          args:
            - "-c"
            # language=bash
            - >
              ls -al /data &&
              chmod -R 750 /data &&
              chown -R 1000:1000 /data
          volumeMounts:
            - mountPath: "/data"
              name: bazel-cache
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
      containers:
        - name: bazel-remote-cache
          image: buchgr/bazel-remote-cache:latest-2.4
          ports:
            - containerPort: 9092
              name: grpc
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
          resources:
            limits:
              memory: "2048Mi"
              cpu: "20"
            requests:
              memory: "512Mi"
              cpu: "200m"
          livenessProbe:
            grpc:
              service: /grpc.health.v1.Health/Check
              port: 9092
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            grpc:
              service: /grpc.health.v1.Health/Check
              port: 9092
            failureThreshold: 3
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 10
          env:
            # Set bazel-remote configuration value here...
            - name: BAZEL_REMOTE_DIR
              value: /data
            - name: BAZEL_REMOTE_MAX_SIZE
              value: "99"
            - name: BAZEL_REMOTE_S3_BUCKET
              value: "nx-bazel-cache-055123857192-v1"
            - name: BAZEL_REMOTE_S3_ENDPOINT
              value: "s3.eu-central-1.amazonaws.com"
            - name: BAZEL_REMOTE_S3_REGION
              value: "eu-central-1"
            - name: BAZEL_REMOTE_S3_PREFIX
              value: "bazel-cache/"
            - name: BAZEL_REMOTE_S3_AUTH_METHOD
              value: "iam_role"
            - name: BAZEL_REMOTE_S3_IAM_ROLE_ENDPOINT
              value: "https://sts.eu-central-1.amazonaws.com"
            - name: BAZEL_REMOTE_S3_UPDATE_TIMESTAMPS
              value: "true"
#            - name: BAZEL_REMOTE_EXPERIMENTAL_REMOTE_ASSET_API
#              value: "true"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - mountPath: /data
              name: bazel-cache
---
apiVersion: "networking.k8s.io/v1"
kind: "NetworkPolicy"
metadata:
  name: "bazel-cache-allow-from-namespace"
  annotations:
    app.kubernetes.io/part-of: "bazel-runner"
spec:
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: "bazel-runner"
      ports:
        - port: 9092
          protocol: "TCP"
  podSelector:
    matchLabels:
      app.kubernetes.io/name: "bazel-runner"
  policyTypes:
    - "Ingress"
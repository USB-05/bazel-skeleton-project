load("@bazel_gazelle//:def.bzl", "gazelle")
load("@com_github_bazelbuild_buildtools//buildifier:def.bzl", "buildifier")

gazelle(name = "gazelle")

buildifier(name = "buildifier")

#SonarQube Configurations
filegroup(
    name = "git",
    srcs = glob(
        [".git/**"],
        exclude = [".git/**/*[*"],  # gitk creates temp files with []
    ),
    tags = ["manual"],
)

filegroup(
    name = "coverage_report",
    srcs = ["bazel-out/_coverage/_coverage_report.dat"],  # Created manually
    tags = ["manual"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "test_reports",
    srcs = glob(["bazel-testlogs/**/test.xml"]),  # Created manually
    tags = ["manual"],
    visibility = ["//visibility:public"],
)

load("//tools/bazel/sonarqube:defs.bzl", "sonarqube")

sonarqube(
    name = "sonarqube_go",
    srcs = [],
    coverage_report = ":coverage_report",
    language = "go",
    modules = {
        "//go-test-module:sq_subproject": "go-test-module",
    },
    project_key = "go_poc",
    project_name = "GO_POC",
    scm_info = [":git"],
    tags = ["manual"],
    targets = [],
)

sonarqube(
    name = "sonarqube_java",
    srcs = [],
    coverage_report = ":coverage_report",
    language = "java",
    modules = {
        "//java-test-module:sq_subproject": "java-test-module",
    },
    project_key = "go_poc",
    project_name = "GO_POC",
    scm_info = [":git"],
    tags = ["manual"],
    targets = [],
)
